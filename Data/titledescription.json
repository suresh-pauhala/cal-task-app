{
  "titles": [
    {
      "question": "Which is the most popular JavaScript framework?",
      "options": [
        "Angular",
        "React",
        "Svelte",
        "Vue"
      ],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which company invented React?",
      "options": [
        "Google",
        "Apple",
        "Netflix",
        "Facebook"
      ],
      "correctOption": 3,
      "points": 10
    },
    {
      "question": "What's the fundamental building block of React apps?",
      "options": [
        "Components",
        "Blocks",
        "Elements",
        "Effects"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "What's the name of the syntax we use to describe the UI in React components?",
      "options": [
        "FBJ",
        "Babel",
        "JSX",
        "ES2015"
      ],
      "correctOption": 2,
      "points": 10
    },
    {
      "question": "How does data flow naturally in React apps?",
      "options": [
        "From parents to children",
        "From children to parents",
        "Both ways",
        "The developers decides"
      ],
      "correctOption": 0,
      "points": 10
    },
    {
      "question": "How to pass data into a child component?",
      "options": [
        "State",
        "Props",
        "PropTypes",
        "Parameters"
      ],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "When to use derived state?",
      "options": [
        "Whenever the state should not trigger a re-render",
        "Whenever the state can be synchronized with an effect",
        "Whenever the state should be accessible to all components",
        "Whenever the state can be computed from another state variable"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "What triggers a UI re-render in React?",
      "options": [
        "Running an effect",
        "Passing props",
        "Updating state",
        "Adding event listeners to DOM elements"
      ],
      "correctOption": 2,
      "points": 20
    },
    {
      "question": "When do we directly \"touch\" the DOM in React?",
      "options": [
        "When we need to listen to an event",
        "When we need to change the UI",
        "When we need to add styles",
        "Almost never"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "question": "In what situation do we use a callback to update state?",
      "options": [
        "When updating the state will be slow",
        "When the updated state is very data-intensive",
        "When the state update should happen faster",
        "When the new state depends on the previous state"
      ],
      "correctOption": 3,
      "points": 30
    },
    {
      "question": "If we pass a function to useState, when will that function be called?",
      "options": [
        "On each re-render",
        "Each time we update the state",
        "Only on the initial render",
        "The first time we update the state"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "Which hook to use for an API request on the component's initial render?",
      "options": [
        "useState",
        "useEffect",
        "useRef",
        "useReducer"
      ],
      "correctOption": 1,
      "points": 10
    },
    {
      "question": "Which variables should go into the useEffect dependency array?",
      "options": [
        "Usually none",
        "All our state variables",
        "All state and props referenced in the effect",
        "All variables needed for clean up"
      ],
      "correctOption": 2,
      "points": 30
    },
    {
      "question": "An effect will always run on the initial render.",
      "options": [
        "True",
        "It depends on the dependency array",
        "False",
        "In depends on the code in the effect"
      ],
      "correctOption": 0,
      "points": 30
    },
    {
      "question": "When will an effect run if it doesn't have a dependency array?",
      "options": [
        "Only when the component mounts",
        "Only when the component unmounts",
        "The first time the component re-renders",
        "Each time the component is re-rendered"
      ],
      "correctOption": 3,
      "points": 20
    },
    {
      "id": "613f",
      "date": "2024-03-10",
      "titles": [
        "afsaf",
        "fsa",
        "dfs",
        "dfsdfsadf"
      ]
    },
    {
      "id": "ad91",
      "date": "2024-03-11",
      "titles": [
        "s",
        "s",
        "s",
        "s"
      ]
    },
    {
      "id": "2cdb",
      "date": "2024-03-12",
      "titles": [
        "",
        "",
        "",
        ""
      ]
    },
    {
      "id": "8efe",
      "date": "2024-03-09",
      "title": "dfgdfgd"
    },
    {
      "id": "9e3f",
      "date": "2024-03-09",
      "title": "dfsd"
    },
    {
      "id": "e591",
      "date": "2024-03-09",
      "title": "ffgsd"
    },
    {
      "id": "07a5",
      "date": "2024-03-09",
      "titles": [
        "dsfsdf",
        "sdfsdfsdf",
        "sdfsdfsdf",
        "sdfsdfs"
      ]
    },
    {
      "id": "eb6b",
      "date": "2024-03-09",
      "titles": [
        "hkjk",
        "hcgvvv",
        "ncbvgvhgh",
        "ghvghvghv"
      ]
    },
    {
      "id": "195b",
      "date": "2024-03-09",
      "titles": [
        "hkjk",
        "hcgvvv",
        "ncbvgvhgh",
        "ghvghvghv"
      ]
    },
    {
      "id": "b93a",
      "date": "2024-03-10",
      "titles": [
        "dfsdf"
      ]
    },
    {
      "id": "b3e9",
      "date": "2024-03-11",
      "titles": [
        "sdasd",
        "assdasd",
        "asdasd",
        "asdasdad"
      ]
    },
    {
      "id": "f866",
      "date": "2024-03-09",
      "titles": [
        "asdas",
        "dasda",
        "sdasdas",
        "dasdad"
      ]
    },
    {
      "id": "160e",
      "date": "2024-03-11",
      "titles": [
        "dsadfsad",
        "asdasda",
        "sdasdasda",
        "asdasdasda"
      ]
    }
  ]
}